/**
 * @generated by openapi-mock-gen
 * If you want to make changes, please remove this entire comment and edit the file directly.
 */

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import { faker } from '@faker-js/faker';

faker.seed(123);

const mockData = () => ({
  200: {
    invalidPatternString: faker.lorem.words(),
    emptyString: faker.string.alpha({ length: { min: 0, max: 0 } }),
    noTypeSpecified: faker.lorem.words(),
    nullableString: faker.lorem.words(),
    arrayWithoutItems: Array.from({ length: 1 }, () => null),
    objectWithoutProperties: {},
    nestedRefLoop: { id: faker.string.uuid(), child: null },
    undefinedType: null,
    extremelyLargeMinimum: faker.number.int({
      min: 9999999,
      max: 999999999999999,
      multipleOf: 1,
    }),
    negativeMaximum: faker.number.int({ min: -1000, max: 0, multipleOf: 1 }),
    invalidMultipleOf: faker.number.int({
      min: 0,
      max: 9999999,
      multipleOf: 1,
    }),
    conflictingConstraints: faker.string.alpha({ length: { min: 5, max: 10 } }),
    wrongTypeWithCorrectExample: 123,
    arrayWithWrongTypeWithCorrectExample: [123, 456],
    emptyEnum: faker.helpers.arrayElement([]),
    arrayWithEmptyEnum: Array.from({ length: 1 }, () => faker.helpers.arrayElement([])),
    complexInvalidPattern: faker.helpers.fromRegExp(/(?<=invalid)lookahead/),
    mixedValidInvalidData: {
      validEmail: faker.internet.email(),
      invalidPattern: faker.lorem.words(),
      validEnum: faker.helpers.arrayElement(['valid1', 'valid2']),
      emptyEnum: faker.helpers.arrayElement([]),
    },
    veryLongPropertyNameThatExceedsNormalLimitsAndMightCauseIssuesInProcessing: faker.lorem.words(),
    specialCharacters: {
      '@special': faker.lorem.words(),
      'property-with-dashes': faker.lorem.words(),
      property_with_underscores: faker.lorem.words(),
      'property.with.dots': faker.lorem.words(),
      'property with spaces': faker.lorem.words(),
      property$with$dollars: faker.lorem.words(),
    },
    unicodeProperties: {
      名前: faker.lorem.words(),
      电子邮件: faker.internet.email(),
      '🚀': faker.lorem.words(),
    },
  },
});

export default mockData;