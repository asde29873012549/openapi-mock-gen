/**
 * @generated by openapi-mock-gen
 * If you want to make changes, please remove this entire comment and edit the file directly.
 */

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import { faker } from '@faker-js/faker';

faker.seed(123);

const mockData = () => ({
  200: {
    basicString: faker.lorem.words(),
    basicInteger: faker.number.int({ min: 0, max: 9999999, multipleOf: 1 }),
    basicNumber: faker.number.int({ min: 0, max: 9999999, multipleOf: 1 }),
    basicBoolean: faker.datatype.boolean(),
    stringWithoutFormat: faker.lorem.words(),
    integerWithoutConstraints: faker.number.int({ min: 0, max: 9999999, multipleOf: 1 }),
    numberWithoutConstraints: faker.number.int({ min: 0, max: 9999999, multipleOf: 1 }),
    arrayOfStrings: Array.from({ length: 1 }, () => faker.lorem.words()),
    arrayOfIntegers: Array.from({ length: 1 }, () => faker.number.int({ min: 0, max: 9999999, multipleOf: 1 })),
    arrayOfNumbers: Array.from({ length: 1 }, () => faker.number.int({ min: 0, max: 9999999, multipleOf: 1 })),
    arrayOfBooleans: Array.from({ length: 1 }, () => faker.datatype.boolean()),
    simpleObject: {
      prop1: faker.lorem.words(),
      prop2: faker.number.int({ min: 0, max: 9999999, multipleOf: 1 }),
      prop3: faker.datatype.boolean(),
    },
    nullValue: null,
    mixedSimpleArray: Array.from({ length: 1 }, () => faker.lorem.words()),
  },
});

export default mockData;