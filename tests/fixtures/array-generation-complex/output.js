/**
 * @generated by openapi-mock-gen
 * If you want to make changes, please remove this entire comment and edit the file directly.
 */

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import { faker } from '@faker-js/faker';

faker.seed(123);

const mockData = () => ({
  200: {
    simpleStringArray: Array.from({ length: 1 }, () => faker.lorem.words()),
    numberArray: Array.from({ length: 1 }, () => faker.number.int({ min: 0, max: 9999999, multipleOf: 1 })),
    booleanArray: Array.from({ length: 1 }, () => faker.datatype.boolean()),
    enumArray: Array.from({ length: 1 }, () => faker.helpers.arrayElement(['option1', 'option2', 'option3'])),
    objectArray: Array.from({ length: 1 }, () => ({
      id: (() => {
        const seed = (Math.random() * 9301 + 49297) % 233280;
        const random = seed / 233280;
        return 0 + Math.floor(random * 9999999);
      })(),
      name: faker.person.fullName(),
      email: faker.internet.email(),
    })),
    nestedArray: Array.from({ length: 1 }, () => Array.from({ length: 1 }, () => faker.lorem.words())),
    mixedArray: Array.from({ length: 1 }, () =>
      faker.helpers.arrayElement([
        faker.lorem.words(),
        faker.number.int({ min: 0, max: 9999999, multipleOf: 1 }),
        { type: faker.lorem.words(), value: faker.lorem.words() },
      ])
    ),
    complexNestedArray: Array.from({ length: 1 }, () => ({
      category: faker.lorem.words(),
      items: Array.from({ length: 1 }, () => ({
        id: faker.string.uuid(),
        metadata: {
          tags: Array.from({ length: 1 }, () => faker.lorem.words()),
          scores: Array.from({ length: 1 }, () => faker.number.int({ min: 1, max: 100, multipleOf: 1 })),
        },
      })),
    })),
    arrayWithHeuristicKeys: Array.from({ length: 1 }, () => ({
      user_id: faker.string.uuid(),
      created_at: faker.date.past(),
      email_address: faker.internet.email(),
      phone_number: faker.phone.number(),
      total_amount: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    })),
  },
});

export default mockData;