/**
 * @generated by openapi-mock-gen
 * If you want to make changes, please remove this entire comment and edit the file directly.
 */

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

import { faker } from '@faker-js/faker';

faker.seed(123);

const mockData = () => ({
  200: {
    id: (() => {
      const seed = (Math.random() * 9301 + 49297) % 233280;
      const random = seed / 233280;
      return 0 + Math.floor(random * 9999999);
    })(),
    report_id: (() => {
      const seed = (Math.random() * 9301 + 49297) % 233280;
      const random = seed / 233280;
      return 0 + Math.floor(random * 9999999);
    })(),
    user_age: faker.number.int({ min: 20, max: 80, multipleOf: 1 }),
    birth_year: faker.number.int({ min: 1900, max: 2025, multipleOf: 1 }),
    birth_month: faker.number.int({ min: 1, max: 12, multipleOf: 1 }),
    birth_day: faker.number.int({ min: 1, max: 31, multipleOf: 1 }),
    view_count: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    item_quantity: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    total_amount: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    file_size: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    word_length: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    screen_width: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    screen_height: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    body_weight: faker.number.int({ min: 1, max: 1000, multipleOf: 1 }),
    product_price: faker.number.int({ min: 1, max: 100000, multipleOf: 1 }),
    discount: faker.number.float({ fractionDigits: 1 }),
    tax_fee: faker.number.int({ min: 1, max: 100000, multipleOf: 1 }),
    service_fee: faker.number.int({ min: 1, max: 100000, multipleOf: 1 }),
    user_rating: faker.number.int({ min: 1, max: 5, multipleOf: 1 }),
    review_stars: faker.number.int({ min: 1, max: 5, multipleOf: 1 }),
    constrainedNumber: faker.number.int({ min: 50, max: 100, multipleOf: 5 }),
    exclusiveMinNumber: faker.number.int({ min: 11, max: 19, multipleOf: 1 }),
    largeRangeInteger: faker.number.int({ min: 1000000, max: 9999999, multipleOf: 1 }),
  },
});

export default mockData;